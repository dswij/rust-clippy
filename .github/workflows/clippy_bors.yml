name: Clippy Test (bors)

on: 
  - push

env:
  RUST_BACKTRACE: 1
  CARGO_TARGET_DIR: '${{ github.workspace }}/target'
  NO_FMT_TEST: 1
  CARGO_INCREMENTAL: 0
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

defaults:
  run:
    shell: bash

jobs:
    base:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        host: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
        exclude:
        - os: ubuntu-latest
          host: x86_64-apple-darwin
        - os: ubuntu-latest
          host: x86_64-pc-windows-msvc
        - os: macos-latest
          host: x86_64-unknown-linux-gnu
        - os: macos-latest
          host: i686-unknown-linux-gnu
        - os: macos-latest
          host: x86_64-pc-windows-msvc
        - os: windows-latest
          host: x86_64-unknown-linux-gnu
        - os: windows-latest
          host: i686-unknown-linux-gnu
        - os: windows-latest
          host: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    # NOTE: If you modify this job, make sure you copy the changes to clippy.yml
    steps:
    # Setup
    - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
      with:
        github_token: "${{ secrets.github_token }}"

    - name: Install dependencies (Linux-i686)
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install gcc-multilib libssl-dev:i386
      if: matrix.host == 'i686-unknown-linux-gnu'

    - name: Checkout
      uses: actions/checkout@v3.0.2

    - name: Install toolchain
      run: rustup show active-toolchain

    # Run
    - name: Set LD_LIBRARY_PATH (Linux)
      if: runner.os == 'Linux'
      run: |
        SYSROOT=$(rustc --print sysroot)
        echo "LD_LIBRARY_PATH=${SYSROOT}/lib${LD_LIBRARY_PATH+:${LD_LIBRARY_PATH}}" >> $GITHUB_ENV
    - name: Link rustc dylib (MacOS)
      if: runner.os == 'macOS'
      run: |
        SYSROOT=$(rustc --print sysroot)
        sudo mkdir -p /usr/local/lib
        sudo find "${SYSROOT}/lib" -maxdepth 1 -name '*dylib' -exec ln -s {} /usr/local/lib \;
    - name: Set PATH (Windows)
      if: runner.os == 'Windows'
      run: |
        SYSROOT=$(rustc --print sysroot)
        echo "$SYSROOT/bin" >> $GITHUB_PATH

    - name: Build
      run: cargo build --features deny-warnings,internal

    - name: Test
      if: runner.os == 'Linux'
      run: cargo test --features deny-warnings,internal

    - name: Test
      if: runner.os != 'Linux'
      run: cargo test --features deny-warnings,internal -- --skip dogfood

    - name: Test clippy_lints
      run: cargo test --features deny-warnings,internal
      working-directory: clippy_lints

    - name: Test clippy_utils
      run: cargo test --features deny-warnings,internal
      working-directory: clippy_utils

    - name: Test rustc_tools_util
      run: cargo test --features deny-warnings
      working-directory: rustc_tools_util

    - name: Test clippy_dev
      run: cargo test --features deny-warnings
      working-directory: clippy_dev

    - name: Test clippy-driver
      run: bash .github/driver.sh
      env:
        OS: ${{ runner.os }}
